# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# build ui to production

name: Deploy UI

on:
  push:
    branches: [ "main" ]
    paths: 
      # include
      - './ui/**'
      # ignore
      - '!.github/workflows/**'
      - '!*.md'
  pull_request:
    branches: [ "main" ]
    paths: 
      # include
      - './ui/**'
      # ignore
      - '!.github/workflows/**'
      - '!*.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: HuaweiCloud
    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        node-version: [ 20.x ]    
    steps:
      # get source code
      - name: Checkout repository
        uses: actions/checkout@v4
      # install deps
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmmirror.com/'
          cache: 'pnpm'
          cache-dependency-path: ./ui/pnpm-lock.yaml
      - name: Install dependencies
        run: pwd && cd ./ui && pnpm i
      # build
      - name: Build App
        run: pwd && cd ./ui && pnpm run build && ls -l ./dist/spa/
      # upload dist to server
      - name: Copy artifact to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          # scp remote host
          host: ${{ secrets.IP }}
          # scp remote port
          port: ${{ secrets.PORT }}
          # scp username
          username: ${{ secrets.USER }}
          # content of ssh private key. ex raw content of ~/.ssh/id_rsa
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # remove target folder before upload data
          rm: /home/${{ secrets.USER }}/projects/arale-codegen/pc/dist
          # scp file list
          source: ./ui/dist/*
          # target path on the server, must be a directory path
          target: /home/${{ secrets.USER }}/projects/arale-codegen/pc/dist/
